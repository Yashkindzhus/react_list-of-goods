{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","isStarted","isReversed","sortBy","sortAlphabetically","goodsCopy","sort","g1","g2","localeCompare","this","length","reverse","className","type","onClick","setState","map","good","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAQ,CACNC,MAAOH,EACPI,WAAW,EACXC,YAAY,EACZC,OAAQ,Y,EAGVC,mBAAqB,SAACC,GACpB,OAAOA,EAAUC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,O,4CAGrD,WAAU,IAAD,OACP,EAKIE,KAAKX,MAJPC,EADF,EACEA,MACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,OAGIE,EAAS,YAAOL,GAEtB,OAAQG,GACN,IAAK,WACHE,EAAUC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC5C,MACF,IAAK,SACHH,EAAUC,MAAK,SAACC,EAAIC,GAAL,OAAaD,EAAGI,OAASH,EAAGG,UAS/C,OAJIT,GACFG,EAAUO,UAIV,sBAAKC,UAAU,MAAf,UACE,wCAEEZ,GACA,wBACEa,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEf,WAAW,KAH/B,mBAUDA,GACC,qCACE,wBACEa,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAEd,YAAaA,KAF9C,qBAMA,wBACEY,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAEb,OAAQ,cAFzC,iCAMA,wBACEW,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAEb,OAAQ,YAFzC,4BAMA,wBACEW,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEb,OAAQ,WAAYD,YAAY,KAHpD,mBAQA,6BACGG,EAAUY,KAAI,SAAAC,GAAI,OACjB,6BACGA,GADMA,kB,GAjFPC,IAAMC,eA6FTtB,IC1GfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eaa90834.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.PureComponent {\n  state = {\n    goods: goodsFromServer,\n    isStarted: false,\n    isReversed: false,\n    sortBy: 'standart',\n  };\n\n  sortAlphabetically = (goodsCopy: string[]) => {\n    return goodsCopy.sort((g1, g2) => g1.localeCompare(g2));\n  };\n\n  render() {\n    const {\n      goods,\n      isStarted,\n      isReversed,\n      sortBy,\n    } = this.state;\n\n    const goodsCopy = [...goods];\n\n    switch (sortBy) {\n      case 'alphabet':\n        goodsCopy.sort((g1, g2) => g1.localeCompare(g2));\n        break;\n      case 'length':\n        goodsCopy.sort((g1, g2) => (g1.length - g2.length));\n        break;\n      default: break;\n    }\n\n    if (isReversed) {\n      goodsCopy.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n\n        {!isStarted && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ isStarted: true });\n            }}\n          >\n            Start\n          </button>\n        )}\n\n        {isStarted && (\n          <>\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ isReversed: !isReversed })}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ sortBy: 'alphabet' })}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ sortBy: 'length' })}\n            >\n              Sort by length\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({ sortBy: 'standart', isReversed: false });\n              }}\n            >\n              Reset\n            </button>\n            <ul>\n              {goodsCopy.map(good => (\n                <li key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}